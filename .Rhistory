makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y, z, w) {
x <<- matrix (y, nrow = z, ncol = w)
##Do I need to set these values to NULL?
##Did I set up nrow/ncol correctly?
#inverse <<- NULL
}
get <- function()x
setinverse <- function(solve) inverse <<- solve(x)
getinverse <- function() inverse
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
a <- makeCacheMatrix
a$set(c(1:10), 2, 5)
a$set(1:10, 2, 5)
a$set(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 2, 5)
a$set
y <- 1:10
z <- 2
w <- 5
x <<- matrix (y, nrow = z, ncol = w)
View(x)
set <- function(y, z, w) {
x <<- matrix (y, nrow = z, ncol = w)
##Do I need to set these values to NULL?
##Did I set up nrow/ncol correctly?
#inverse <<- NULL
}
set(y, z, w)
b <- set(y, z, w)
a$set(y, z, w)
makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y, z, w) {
x <<- matrix (y, nrow = z, ncol = w)
##Do I need to set these values to NULL?
##Did I set up nrow/ncol correctly?
#inverse <<- NULL
return (x)
}
get <- function()x
setinverse <- function(solve) inverse <<- solve(x)
getinverse <- function() inverse
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
a <- makeCacheMatrix
a$set(y, z, w)
set <- function(y, z, w) {
x <<- matrix (y, nrow = z, ncol = w)
##Do I need to set these values to NULL?
##Did I set up nrow/ncol correctly?
#inverse <<- NULL
return (x)
}
set (y, z, w)
set (1:20, 2, 5)
makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y, z, w) {
x <<- matrix (y, nrow = z, ncol = w)
##Do I need to set these values to NULL?
##Did I set up nrow/ncol correctly?
#inverse <<- NULL
return (x)
}
get <- function()x
setinverse <- function(solve) inverse <<- solve(x)
getinverse <- function() inverse
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
set <- function(y, z, w) {
x <<- matrix (y, nrow = z, ncol = w)
##Do I need to set these values to NULL?
##Did I set up nrow/ncol correctly?
#inverse <<- NULL
return (x)
}
set (1:20, 5, 2)
set (1:20, 10, 2)
a <- makeCacheMatrix()
a$set(y, z, w)
a$set(1:30, 6, 5)
b <- makeCacheMatrix(1:50, 10, 5)
b <- makeCacheMatrix(a$set(1:30, 6, 5))
b$get
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inverse <- x$getinverse()
if(!is.null(inverse)) {
message("getting cached data")
return(inverse)
data <- x$get()
inverse <- solve(data, ...)
x$setinverse(inverse)
inverse
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inverse <- x$getinverse()
if(!is.null(inverse)) {
message("getting cached data")
return(inverse)
}
data <- x$get()
inverse <- solve(data, ...)
x$setinverse(inverse)
inverse
}
b <- makeCacheMatrix(a$set(1:30, 6, 5))
inverse <- NULL
